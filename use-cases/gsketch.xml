<!-- gMark encoding of the schema from LDBC SNB -->

<generator>
	<graph>
		<nodes>10000</nodes>
	</graph>

	<predicates>
		<size>15</size>
		<alias symbol="0">0</alias>
		<proportion symbol="0">0.00833</proportion>

		<alias symbol="1">1</alias>
		<proportion symbol="1">0.01667</proportion>

		<alias symbol="2">2</alias>
		<proportion symbol="2">0.025</proportion>

		<alias symbol="3">3</alias>
		<proportion symbol="3">0.03333</proportion>

		<alias symbol="4">4</alias>
		<proportion symbol="4">0.04167</proportion>

		<alias symbol="5">5</alias>
		<proportion symbol="5">0.05</proportion>

		<alias symbol="6">6</alias>
		<proportion symbol="6">0.05833</proportion>

		<alias symbol="7">7</alias>
		<proportion symbol="7">0.06667</proportion>

		<alias symbol="8">8</alias>
		<proportion symbol="8">0.075</proportion>

		<alias symbol="9">9</alias>
		<proportion symbol="9">0.08333</proportion>

		<alias symbol="10">10</alias>
		<proportion symbol="10">0.09167</proportion>

		<alias symbol="11">11</alias>
		<proportion symbol="11">0.1</proportion>

		<alias symbol="12">12</alias>
		<proportion symbol="12">0.10833</proportion>

		<alias symbol="13">13</alias>
		<proportion symbol="13">0.11667</proportion>

		<alias symbol="14">14</alias>
		<proportion symbol="14">0.125</proportion>

	</predicates>

	<types>
		<size>5</size>
		<alias type="0">T1</alias>
		<proportion type="0">1</proportion>
	</types>


	<schema>
		<source type="0">

			<target type="0" symbol="0" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.2</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.2</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="1" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.7</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.7</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="2" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.6</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.6</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="3" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.2</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.2</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="4" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.4</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.4</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="5" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.3</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.3</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="6" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.5</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.5</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="7" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.6</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.6</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="8" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.5</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.5</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="9" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.2</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.2</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="10" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.7</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.7</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="11" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.3</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.3</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="12" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.6</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.6</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="13" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.8</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.8</alpha>
				</outdistribution>
			</target>
			<target type="0" symbol="14" multiplicity="*">
				<indistribution type="zipfian">
					<alpha>1.4</alpha>
				</indistribution>
				<outdistribution type="zipfian">
					<alpha>1.4</alpha>
				</outdistribution>
			</target>
		</source>
	</schema>

	<workload id="0" size="1">
		<!-- bounds for the size of these queries -->
		<size>
			<conjuncts min="5" max="5"/>  <!-- number of A^M where M is a multiplicity 1 or * -->
			<disjuncts min="1" max="1"/>  <!-- number of w_1 + ... + w_n in each A -->
			<length min="6" max="6"/>   <!-- number of a_1 . ... . a_m in each w_i -->
		</size>

		<!-- probability to have "*" as multiplicity of the conjuncts -->
		<multiplicity star="0.5"/>

		<!-- the arity of the generated queries, we allow 0 for Boolean queries -->
		<arity mizn="2" max="2"/>

		<!-- we want only linear queries, but not constant nor quadratic -->
		<selectivity constant="1" linear="1" quadratic="1"/>

		<!-- we want to have in the workload chains and stars, but not cycles, etc. -->
		<type chain="0" star="1" cycle="0" starchain="1"/>
	</workload>


</generator>